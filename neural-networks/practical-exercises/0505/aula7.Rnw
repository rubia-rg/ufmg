\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}

<<echo=T,fig=F>>=
rm(list=ls())
library('plot3D')

yperceptron <- function(xvec, w, par)
{
  if(par == 1)
    xvec <- cbind(-1, xvec)
  u <- xvec %*% w
  y <- 1*(u >= 0)
  return(as.matrix(y))
}

trainperceptron <- function(xin, yd, eta, tol, maxepocas, par)
{
  dimxin <- dim(xin)
  N <- dimxin[1] # 
  n <- dimxin[2] #
  if(par == 1)
  {
    wt <- as.matrix(runif(n+1) - 0.5) # n + 1 linhas (vetor coluna), wt: w transposto
    xin <- cbind(-1, xin)
  }
  else 
  {
    wt <- as.matrix(runif(n) - 0.5)
  }
  
  nepocas <- 0 # percorrer todo o espaco
  eepoca <- tol+1
  evec <- matrix(nrow=1, ncol=maxepocas) # MSE p/ epoca
  
  while ((nepocas < maxepocas) && (eepoca > tol))
  {
    ei2 <- 0 # sq error
    xseq <- sample(N)
    
    for(i in 1:N)
    {
      irand <- xseq[i]
      yhati <- as.double((xin[irand,] %*% wt) >= 0) # no adaline, retirar >= 0, x %*% wt
      ei <- yd[irand]- yhati # erro
      dw <- eta*ei*xin[irand,] # delta w
      wt <- wt+dw # ataulizacao w
      ei2 <- ei2+ei*ei # erro^2
    }
    nepocas <- nepocas+1
    evec[nepocas] <- ei2/N # MSE
    eepoca <- evec[nepocas] # erro epoca
  }
  retlist <- list(wt=wt, evec=evec[1:nepocas])
  return(retlist)
}
@

<<echo=T,fig=T>>=
eta <- 0.1
tol <- 0.01
maxepocas <- 10000
par <- 1
ntrain <- 30

data(iris)
xc1 <- as.matrix(iris[1:50,1:4]) 
xc2 <- as.matrix(iris[51:100,1:4])
yc1 <-  as.numeric(iris[1:50,5])-1
yc2 <-  as.numeric(iris[51:100,5])-1

# amostragem treino e teste #
ic1 <- sample(2, nrow(xc1), replace=TRUE, prob=c(0.6,0.4))
ic2 <- sample(2, nrow(xc2), replace=TRUE, prob=c(0.6,0.4))

xc1tr <- xc1[which(ic1==1),]
yc1tr <- yc1[which(ic1==1)]

xc1te <- xc1[which(ic1==2),]
yc1te <- yc1[which(ic1==2)]

xc2tr <- xc2[which(ic2==1),]
yc2tr <- yc2[which(ic2==1)]

xc2te <- xc2[which(ic2==2),]
yc2te <- yc2[which(ic2==2)]

xtrain <- as.matrix(rbind(xc1tr,xc2tr))
ytrain <- c(yc1tr,yc2tr)

xtest <- as.matrix(rbind(xc1te,xc2te))
ytest <- c(yc1te,yc2te)

train <- trainperceptron(xtrain, ytrain, eta, tol, maxepocas, par)
test <- yperceptron(xtest, train$wt, par)

mse <- sum((ytest - test)^2)/(length(ytest))
@


\end{document}