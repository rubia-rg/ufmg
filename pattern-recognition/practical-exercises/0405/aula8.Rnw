\documentclass{article}


\title{Exerc?cio 3: K-means Clustering}
\author{R?bia Reis Guerra \\ 2013031143}

\begin{document}
\SweaveOpts{concordance=TRUE}
\maketitle

\section{Fun??o K-means}

<<echo=T,FIG=F>>=
######################
# Fun??es #
indexDist <- function(xt, u, k, n)
{
  d <- matrix(nrow=k,ncol=n)
  for (i in 1:k)
  {
    d[i,] <- sqrt((xt-u[i,])^2)
  }
  
  return(which(d==min(d), arr.ind = TRUE)[1,1])
}
  
kmeans <- function(X, k)
{
  # Obtem as dimensoes de X #
  N <- dim(X)[1]
  n <- dim(X)[2]
  
  # Numero de iteracoes max. #
  max <- 100
  
  # u: k-centros de X
  u <- matrix(nrow=k, ncol=n)
  
  xseq <- sample(N)
  
  u <- X[xseq[1:k],] # vetor de exemplos
  
  # calcular dist do padrao ao centro
  # rotular padrao conforme min dist
  # atribui a um vetor
  xt <- c()
  iseq <- sample(N)
  
  groups <- c()
  old <- c()
  flag <- TRUE
  count <- 0
  while(count < max && flag==TRUE)
  {
    count <- count + 1
    old <- groups
    for (i in 1:N)
    {
      xt <- X[i,]
      groups[i] <- indexDist(xt, u, k, n)
    }
    
    # Calcula novos centros pelas medias de cada grupo
    for (i in 1:k){ u[i,] <- mean(X[groups==i]) }
    
    flag <- ifelse(all.equal(groups,old)==TRUE, TRUE, FALSE)
    
  }
  
  # retornar centros, gx: grupo de x
  return(list(u,groups))
}

##################################################################

N <- 100

c1 <- matrix(rnorm(100, mean = 2, sd = 0.5),ncol=2)
c2 <- matrix(rnorm(100, mean = 4, sd = 0.5),ncol=2)
c3 <- matrix(rnorm(100, mean = 6, sd = 0.5),ncol=2)

samples <- rbind(c1,c2,c3)
plot(samples[,1],samples[,2],type='p')

b <- kmeans(samples, 3)
plot(b[[1]][1,1],b[[1]][1,2],type='p',pch='+',col='green',xlab='',ylab='',xlim=c(0,8),ylim=c(0,8))
par(new=T)
plot(b[[1]][2,1],b[[1]][2,2],type='p',pch='+',col='red',xlab='',ylab='',xlim=c(0,8),ylim=c(0,8))
par(new=T)
plot(b[[1]][3,1],b[[1]][3,2],type='p',pch='+',col='blue',xlab='',ylab='',xlim=c(0,8),ylim=c(0,8))
par(new=T)
plot(samples[b[[2]]==1,1],samples[b[[2]]==1,2],type='p',col='green',xlab='',ylab='',xlim=c(0,8),ylim=c(0,8))
par(new=T)
plot(samples[b[[2]]==2,1],samples[b[[2]]==2,2],type='p',col='red',xlab='',ylab='',xlim=c(0,8),ylim=c(0,8))
par(new=T)
plot(samples[b[[2]]==3,1],samples[b[[2]]==3,2],type='p',col='blue',xlim=c(0,8),ylim=c(0,8))

@

\end{document}