\documentclass{article}

\begin{document}
\SweaveOpts{concordance=TRUE}


<<echo=T,fig=T>>=
pdfnvar <- function(x,m,k,V){
  ((1/(sqrt(((2*pi)^k)*det(V))))
   *exp(-0.5*(t(x-m) %*% solve(V) %*% (x-m))))}
# Classificacao Bayesiana #
class <- function(pxc1,pxc2,pc1,pc2){ifelse(((pxc1/pxc2) >= (pc2/pc1)), 1, 2)}
@

<<echo=T,fig=F>>=
##################################################################
indexDist <- function(xt, u, k, n)
{
  d <- matrix(nrow=k,ncol=n)
  for (i in 1:k)
  {
    d[i,] <- sqrt((xt-u[i,])^2)
  }
  
  return(which(d==min(d), arr.ind = TRUE)[1,1])
}
  
mykmeans <- function(X, k)
{
  # Obtem as dimensoes de X #
  N <- dim(X)[1]
  n <- dim(X)[2]
  
  # Numero de iteracoes max. #
  max <- 10000
  
  # u: k-centros de X
  u <- matrix(nrow=k, ncol=n)
  
  xseq <- sample(N)
  
  u <- X[xseq[1:k],] # vetor de exemplos
  
  # calcular dist do padrao ao centro
  # rotular padrao conforme min dist
  # atribui a um vetor
  xt <- c()
  iseq <- sample(N)
  
  groups <- c()
  old <- c()
  flag <- TRUE
  count <- 0
  while(count < max && flag==TRUE)
  {
    count <- count + 1
    old <- groups
    for (i in 1:N)
    {
      xt <- X[i,]
      groups[i] <- indexDist(xt, u, k, n)
    }
    
    # Calcula novos centros pelas medias de cada grupo
    for (i in 1:k){ u[i,] <- mean(X[groups==i]) }
    
    flag <- ifelse(all.equal(groups,old)==TRUE, TRUE, FALSE)
    
  }
  
  # retornar centros, gx: grupo de x
  return(list(u,groups))
}
@



<<echo=T,fig=T>>=
##################################################################
N <- 100
k <- 4
# Modo 1 #
# c1 <- matrix(rnorm(N), ncol=2) + t(replicate(c(2,3),n=N/2))
# c2 <- matrix(rnorm(N), ncol=2) + t(replicate(c(3,2),n=N/2))
# c3 <- matrix(rnorm(N), ncol=2) + t(replicate(c(4,3),n=N/2))
# c4 <- matrix(rnorm(N), ncol=2) + t(replicate(c(3,4),n=N/2))
# samples <- rbind(c1,c2,c3,c4)
# plot(samples[,1],samples[,2],type='p')

# Modo 2 #
S <- matrix(c(1,0,0,1),byrow=T,ncol=2)
g1 <- mvrnorm(N,mu=c(2,3), Sigma=S)
g2 <- mvrnorm(N,mu=c(3,2), Sigma=S)
g3 <- mvrnorm(N,mu=c(4,3), Sigma=S)
g4 <- mvrnorm(N,mu=c(3,4), Sigma=S)
g <- rbind(g1,g2,g3,g4)
plot(g[,1], g[,2], type='p')

kmresult <- kmeans(g,k)

seqi <- seq(0,6,1)
seqj <- seq(0,6,1)
for (i in 1:k)
{
  ci <- 0
  for (i in seqi)
  {
    cj <- 0
    ci<- ci + 1
    for (j in seqj)
    {
      cj <- cj + 1
      
      pxc[ci] <- pdfnvar(,colMeans(g[kmresult$cluster==k,]),dim(g)[2],cov(g[kmresult$cluster==k,]))
    }
    px[i]
  }
}
@

\end{document}