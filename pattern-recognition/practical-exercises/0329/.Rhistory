library('rgl')
library('MASS')
rm(list=ls())
###########################
# Functions #
fnormalmultivar <- function(x,m,k,V)
{
f <- ((1/(sqrt(((2*pi)^k)*det(V))))*exp(-0.5*(t(x-m) %*% solve(V) %*% (x-m))))
return(f)
}
###########################
# Iris Dataset #
data(iris)
as.matrix(iris)
X <- as.matrix(iris[,1:4])
Y <- as.matrix(iris[,5])
Y1 <- matrix(0, nrow=50,ncol=1)
Y2 <- matrix(1, nrow=100,ncol=1)
Y <- rbind(Y1,Y2)
###########################
# Shuffle data #
set.seed(1234)
index <- sample(2, nrow(iris), replace=TRUE, prob=c(0.8,0.2))
###########################
# Training Set #
train <- X[index==1]
trainLabels <- Y[index==1]
###########################
# Test Set #
test <- X[index==2]
testLabes <- Y[index==2]
###########################
# plot(c1[,1], c1[,2], col='red', type='p', xlim=c(0,6), ylim=c(0,6),xlab='x_1',ylab='x_2')
# par(new=T)
# plot(c2[,1], c2[,2], col='blue', type='p', xlim=c(0,6), ylim=c(0,6),xlab='',ylab='')
#
# ############################
#
# m11 <- mean(c1[,1])
# s11 <- sd(c1[,1])
#
# m12 <- mean(c1[,2])
# s12 <- sd(c1[,2])
# cr1 <- cor(c1[,1],c1[,2])
# cv1 <- cov(c1)
#
# m21 <- mean(c2[,1])
# s21 <- sd(c2[,1])
#
# m22 <- mean(c2[,2])
# s22 <- sd(c2[,2])
# cr2 <- cor(c2[,1],c2[,2])
# cv2 <- cov(c2)
#
# ############################
#
# seqi <- seq(0,6,0.1)
# seqj <- seq(0,6,0.1)
#
# M1 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
# M2 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
#
# ############################
#
# ci <- 0
# for (i in seqi)
# {
#   cj <- 0
#   ci<- ci + 1
#   for (j in seqj)
#   {
#     cj <- cj + 1
#     M1[ci,cj]<-fnormalmultivar(c(i,j),c(m11,m12),dim(c1)[2],cv1)
#     M2[ci,cj]<-fnormalmultivar(c(i,j),c(m21,m22),dim(c2)[2],cv2)
#   }
# }
#
# classx<-1*(M1 >= M2) #limiar
# persp3d(seqi,seqj,M1,col='red',clim=c(0,2),colkey=F)
# persp3d(seqi,seqj,M2,col='blue',clim=c(0,2),add=T,colkey=F)
# ribbon3D(seqi,seqj,classx,col='black',clim=c(0,2),add=T,colkey=F)
x
X
dim(X)
colMeans(X)
fnormalmultivar(X,colMeans(X),4,cov(V))
fnormalmultivar(X,colMeans(X),4,cov(X))
for(i in dim(X)[2])
fnormalmultivar(X[,i],colMeans(X[,i]),4,cov(X))
fnormalmultivar(X[,i],colMeans(X),4,cov(X))
M1[ci,cj]<-fnormalmultivar(c(i,j),c(m11,m12),dim(c1)[2],cv1)
library('rgl')
library('rgl')
library('MASS')
rm(list=ls())
fnormal2var <- function(x,y,mx,my,sx,sy,cr)
{
a <- (((x-mx)^2)/(sx^2))
b <- (((y-my)^2)/(sy^2))
c <- (2*cr*((x-mx)*(y-my))/sy*sx)
f <- (1/(2*pi*sx*sy*sqrt(1-cr*cr)))*exp((-0.5*(1-cr*cr))*(a+b-c))
return(f)
}
fnormalmultivar <- function(x,m,k,V)
{
f <- ((1/(sqrt(((2*pi)^k)*det(V))))*exp(-0.5*(t(x-m) %*% solve(V) %*% (x-m))))
return(f)
}
###########################
c1 <- matrix(rnorm(100, mean = 2, sd = 0.3),ncol=2)
c2 <- matrix(rnorm(100, mean = 4, sd = 0.8),ncol=2)
plot(c1[,1], c1[,2], col='red', type='p', xlim=c(0,6), ylim=c(0,6),xlab='x_1',ylab='x_2')
par(new=T)
plot(c2[,1], c2[,2], col='blue', type='p', xlim=c(0,6), ylim=c(0,6),xlab='',ylab='')
############################
m11 <- mean(c1[,1])
s11 <- sd(c1[,1])
m12 <- mean(c1[,2])
s12 <- sd(c1[,2])
cr1 <- cor(c1[,1],c1[,2])
cv1 <- cov(c1)
m21 <- mean(c2[,1])
s21 <- sd(c2[,1])
m22 <- mean(c2[,2])
s22 <- sd(c2[,2])
cr2 <- cor(c2[,1],c2[,2])
cv2 <- cov(c2)
############################
seqi <- seq(0,6,0.1)
seqj <- seq(0,6,0.1)
M1 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
M2 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
############################
ci <- 0
for (i in seqi)
{
cj <- 0
ci<- ci + 1
for (j in seqj)
{
cj <- cj + 1
#M1[ci,cj]<-fnormal2var(i,j,m11,m12,s11,s12,cr1)
#M2[ci,cj]<-fnormal2var(i,j,m21,m22,s21,s22,cr2)
M1[ci,cj]<-fnormalmultivar(c(i,j),c(m11,m12),dim(c1)[2],cv1)
M2[ci,cj]<-fnormalmultivar(c(i,j),c(m21,m22),dim(c2)[2],cv2)
}
}
classx<-1*(M1 >= M2) #limiar
persp3d(seqi,seqj,M1,col='red',clim=c(0,2),colkey=F)
persp3d(seqi,seqj,M2,col='blue',clim=c(0,2),add=T,colkey=F)
persp3d(seqi,seqj,classx,col='black',clim=c(0,2),add=T,colkey=F)
library('rgl')
library('MASS')
rm(list=ls())
fnormal2var <- function(x,y,mx,my,sx,sy,cr)
{
a <- (((x-mx)^2)/(sx^2))
b <- (((y-my)^2)/(sy^2))
c <- (2*cr*((x-mx)*(y-my))/sy*sx)
f <- (1/(2*pi*sx*sy*sqrt(1-cr*cr)))*exp((-0.5*(1-cr*cr))*(a+b-c))
return(f)
}
fnormalmultivar <- function(x,m,k,V)
{
f <- ((1/(sqrt(((2*pi)^k)*det(V))))*exp(-0.5*(t(x-m) %*% solve(V) %*% (x-m))))
return(f)
}
###########################
c1 <- matrix(rnorm(100, mean = 2, sd = 0.3),ncol=2)
c2 <- matrix(rnorm(100, mean = 4, sd = 0.8),ncol=2)
plot(c1[,1], c1[,2], col='red', type='p', xlim=c(0,6), ylim=c(0,6),xlab='x_1',ylab='x_2')
par(new=T)
plot(c2[,1], c2[,2], col='blue', type='p', xlim=c(0,6), ylim=c(0,6),xlab='',ylab='')
############################
m11 <- mean(c1[,1])
s11 <- sd(c1[,1])
m12 <- mean(c1[,2])
s12 <- sd(c1[,2])
cr1 <- cor(c1[,1],c1[,2])
cv1 <- cov(c1)
m21 <- mean(c2[,1])
s21 <- sd(c2[,1])
m22 <- mean(c2[,2])
s22 <- sd(c2[,2])
cr2 <- cor(c2[,1],c2[,2])
cv2 <- cov(c2)
############################
seqi <- seq(0,6,0.1)
seqj <- seq(0,6,0.1)
M1 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
M2 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
############################
ci <- 0
for (i in seqi)
{
cj <- 0
ci<- ci + 1
for (j in seqj)
{
cj <- cj + 1
#M1[ci,cj]<-fnormal2var(i,j,m11,m12,s11,s12,cr1)
#M2[ci,cj]<-fnormal2var(i,j,m21,m22,s21,s22,cr2)
M1[ci,cj]<-fnormalmultivar(c(i,j),c(m11,m12),dim(c1)[2],cv1)
M2[ci,cj]<-fnormalmultivar(c(i,j),c(m21,m22),dim(c2)[2],cv2)
}
}
classx<-1*(M1 >= M2) #limiar
persp3d(seqi,seqj,M1,col='red',clim=c(0,2),colkey=F)
persp3d(seqi,seqj,M2,col='blue',clim=c(0,2),add=T,colkey=F)
persp3d(seqi,seqj,classx,col='black',clim=c(0,2),add=T,colkey=F)
install.packages("rgl")
library('rgl')
library('MASS')
rm(list=ls())
fnormal2var <- function(x,y,mx,my,sx,sy,cr)
{
a <- (((x-mx)^2)/(sx^2))
b <- (((y-my)^2)/(sy^2))
c <- (2*cr*((x-mx)*(y-my))/sy*sx)
f <- (1/(2*pi*sx*sy*sqrt(1-cr*cr)))*exp((-0.5*(1-cr*cr))*(a+b-c))
return(f)
}
fnormalmultivar <- function(x,m,k,V)
{
f <- ((1/(sqrt(((2*pi)^k)*det(V))))*exp(-0.5*(t(x-m) %*% solve(V) %*% (x-m))))
return(f)
}
###########################
c1 <- matrix(rnorm(100, mean = 2, sd = 0.3),ncol=2)
c2 <- matrix(rnorm(100, mean = 4, sd = 0.8),ncol=2)
plot(c1[,1], c1[,2], col='red', type='p', xlim=c(0,6), ylim=c(0,6),xlab='x_1',ylab='x_2')
par(new=T)
plot(c2[,1], c2[,2], col='blue', type='p', xlim=c(0,6), ylim=c(0,6),xlab='',ylab='')
############################
m11 <- mean(c1[,1])
s11 <- sd(c1[,1])
m12 <- mean(c1[,2])
s12 <- sd(c1[,2])
cr1 <- cor(c1[,1],c1[,2])
cv1 <- cov(c1)
m21 <- mean(c2[,1])
s21 <- sd(c2[,1])
m22 <- mean(c2[,2])
s22 <- sd(c2[,2])
cr2 <- cor(c2[,1],c2[,2])
cv2 <- cov(c2)
############################
seqi <- seq(0,6,0.1)
seqj <- seq(0,6,0.1)
M1 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
M2 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
############################
ci <- 0
for (i in seqi)
{
cj <- 0
ci<- ci + 1
for (j in seqj)
{
cj <- cj + 1
#M1[ci,cj]<-fnormal2var(i,j,m11,m12,s11,s12,cr1)
#M2[ci,cj]<-fnormal2var(i,j,m21,m22,s21,s22,cr2)
M1[ci,cj]<-fnormalmultivar(c(i,j),c(m11,m12),dim(c1)[2],cv1)
M2[ci,cj]<-fnormalmultivar(c(i,j),c(m21,m22),dim(c2)[2],cv2)
}
}
classx<-1*(M1 >= M2) #limiar
persp3d(seqi,seqj,M1,col='red',clim=c(0,2),colkey=F)
persp3d(seqi,seqj,M2,col='blue',clim=c(0,2),add=T,colkey=F)
persp3d(seqi,seqj,classx,col='black',clim=c(0,2),add=T,colkey=F)
remove.packages('rgl')
remove.packages("rgl")
update.packages()
install.packages("rgl")
library('rgl')
library('MASS')
rm(list=ls())
fnormal2var <- function(x,y,mx,my,sx,sy,cr)
{
a <- (((x-mx)^2)/(sx^2))
b <- (((y-my)^2)/(sy^2))
c <- (2*cr*((x-mx)*(y-my))/sy*sx)
f <- (1/(2*pi*sx*sy*sqrt(1-cr*cr)))*exp((-0.5*(1-cr*cr))*(a+b-c))
return(f)
}
fnormalmultivar <- function(x,m,k,V)
{
f <- ((1/(sqrt(((2*pi)^k)*det(V))))*exp(-0.5*(t(x-m) %*% solve(V) %*% (x-m))))
return(f)
}
###########################
c1 <- matrix(rnorm(100, mean = 2, sd = 0.3),ncol=2)
c2 <- matrix(rnorm(100, mean = 4, sd = 0.8),ncol=2)
plot(c1[,1], c1[,2], col='red', type='p', xlim=c(0,6), ylim=c(0,6),xlab='x_1',ylab='x_2')
par(new=T)
plot(c2[,1], c2[,2], col='blue', type='p', xlim=c(0,6), ylim=c(0,6),xlab='',ylab='')
############################
m11 <- mean(c1[,1])
s11 <- sd(c1[,1])
m12 <- mean(c1[,2])
s12 <- sd(c1[,2])
cr1 <- cor(c1[,1],c1[,2])
cv1 <- cov(c1)
m21 <- mean(c2[,1])
s21 <- sd(c2[,1])
m22 <- mean(c2[,2])
s22 <- sd(c2[,2])
cr2 <- cor(c2[,1],c2[,2])
cv2 <- cov(c2)
############################
seqi <- seq(0,6,0.1)
seqj <- seq(0,6,0.1)
M1 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
M2 <- matrix(0,nrow=length(seqi),ncol=length(seqj))
############################
ci <- 0
for (i in seqi)
{
cj <- 0
ci<- ci + 1
for (j in seqj)
{
cj <- cj + 1
#M1[ci,cj]<-fnormal2var(i,j,m11,m12,s11,s12,cr1)
#M2[ci,cj]<-fnormal2var(i,j,m21,m22,s21,s22,cr2)
M1[ci,cj]<-fnormalmultivar(c(i,j),c(m11,m12),dim(c1)[2],cv1)
M2[ci,cj]<-fnormalmultivar(c(i,j),c(m21,m22),dim(c2)[2],cv2)
}
}
classx<-1*(M1 >= M2) #limiar
persp3d(seqi,seqj,M1,col='red',clim=c(0,2),colkey=F)
persp3d(seqi,seqj,M2,col='blue',clim=c(0,2),add=T,colkey=F)
persp3d(seqi,seqj,classx,col='black',clim=c(0,2),add=T,colkey=F)
